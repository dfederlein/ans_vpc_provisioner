---
- hosts: localhost
  gather_facts: false
  vars:
    - region: us-east-2
    - project_name: dfed-demo
    - tag_assign: dfed
    - vpcidr: 10.245.0.0/16
    - subnetcidr: 10.245.1.0/24
    
  tasks:
  - ec2_vpc:
      state: present
      region: "{{ region }}"
      cidr_block: "{{ vpcidr }}"
      resource_tags:
        tool: ansible
        Name: "{{ project_name }}-vpc"
      subnets:
        - cidr: "{{ subnetcidr }}"
          az: "{{ region }}a"
          resource_tags:
            tool: ansible
            Name: subnet-a
      internet_gateway: True
      route_tables:
        - subnets:
           - "{{ subnetcidr }}"
          routes:
            - dest: 0.0.0.0/0
              gw: igw
              
  - debug: msg="Created VPC named {{ project_name }}-vpc"

  - ec2_vpc_net_facts:
      region: "{{ region }}"
      filters:
        "tag:Name": "{{ project_name }}-vpc"
    register: network

  - debug: msg="{{ network }}"
    
  - set_fact:
      vpc_id: "{{ network.vpcs[0].id }}"

  - ec2_vpc_subnet_facts:
      region: "{{ region }}"
      filters:
        vpc-id: "{{ vpc_id }}"
    register: vpc_nets
    
  - set_fact:
      subnets: "{{ vpc_nets.subnets | map(attribute='id') | list }}"
 
  - debug: var=subnets[0]
      
  - ec2_group:
      name: webservers
      region: "{{ region }}"
      description: SSH and HTTP/HTTPS 
      vpc_id: "{{ vpc_id }}"
      rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 443
          to_port: 443
          cidr_ip: 0.0.0.0/0
    register: web_sg
  - debug: msg=Created VPC security group called webservers, ID {{ web_sg.group_id }} to take web traffic
  
  - name: search for the latest rhel 7 ami
    ec2_ami_find:
      owner: "410186602215"
      region: "{{ region }}"
      name: "CentOS Linux 7 x86_64 HVM EBS*"
    register: find_results

  - debug: var=find_results
  
  - ec2:
      key_name: "{{ tag_assign }}"
      group: webservers
      volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: 8
        delete_on_termination: true
      vpc_subnet_id: "{{ subnets[0] }}"
      instance_type: t2.micro
      image: "{{ find_results.results[0].ami_id }}"
      wait: true
      region: "{{ region }}"
      exact_count: 1
      count_tag:
        Count: "{{ project_name }}"
      instance_tags:
        Name: "{{ tag_assign }}"
        Count: "{{ project_name }}"
      assign_public_ip: true
    register: ec2
          